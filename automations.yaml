- id: '1649268089255'
  alias: System Start/Shutdown Notification
  description: Send notification on Home Assistant start and shutdown
  trigger:
  - platform: homeassistant
    event: start
    id: hass-startup
  - platform: homeassistant
    event: shutdown
    id: hass-shutdown
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: hass-startup
      sequence:
      - service: notify.telegram_chat_id_swart_ninja_smart_home_group
        data:
          message: "\U0001F973 Home Assistant is starting up again."
    default:
    - service: notify.telegram_chat_id_swart_ninja_smart_home_group
      data:
        message: "\U0001F44B Home Assistant is shutting down... Bye!"
  mode: single
- id: '1649357383872'
  alias: 'Office Light On: Motion'
  description: Turn on a light, based on motion detection, and low light level.
  use_blueprint:
    path: swartninja/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.office_motion
      target_entity: light.office_ceiling
      illuminance_sensor: sensor.office_zw100_multisensor_luminance
      illuminance_cutoff: 20
      no_motion_wait: 5
      blocker_entity: input_boolean.house_mode_away
      target_off_entity: []
- id: '1649365144329'
  alias: 'Hall Light On: Motion'
  description: Turn on a light, based on motion detection, and low light level.
  use_blueprint:
    path: swartninja/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.hall_motion
      target_entity: script.hall_lights_on_dimmed_or_full
      illuminance_sensor: sensor.hall_multisensor_luminance
      illuminance_cutoff: 15
      blocker_entity: input_boolean.house_mode_away
      no_motion_wait: 2
      target_off_entity:
      - light.hall_zw111_nano_dimmer
- id: '1649366156716'
  alias: 'Bathroom Light On: Motion'
  description: Turn on a light, based on motion detection, and low light level.
  use_blueprint:
    path: swartninja/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.bathroom_motion
      target_entity: script.bathroom_lights_on_dimmed_or_full
      illuminance_sensor: sensor.bathroom_multisensor_luminance
      illuminance_cutoff: 20
      blocker_entity: input_boolean.house_mode_away
      no_motion_wait: 3
      target_off_entity:
      - light.bathroom_zw111_nano_dimmer
- id: '1649376556972'
  alias: 'Man Cave Light On: Motion'
  description: Turn on a light, based on motion detection, and low light level.
  use_blueprint:
    path: swartninja/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.man_cave_motion
      target_entity: light.man_cave_ceiling
      illuminance_sensor: sensor.man_cave_multisensor_luminance
      illuminance_cutoff: 80
      blocker_entity: binary_sensor.man_cave_light_automation_blocking_entity
      no_motion_wait: 5
      turn_off_blocker_entity: binary_sensor.panasonic_tv
- id: '1649491949914'
  alias: 'Living Room Light On: Motion'
  description: Turn on a light, based on motion detection, and low light level.
  use_blueprint:
    path: swartninja/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.living_room_motion
      target_entity: script.living_room_lights_on_main_or_secondary
      illuminance_sensor: sensor.living_room_luminance
      illuminance_cutoff: 30
      blocker_entity: binary_sensor.living_room_light_automation_blocking_entity
      no_motion_wait: 10
      turn_off_blocker_entity: media_player.living_room_television
      target_off_entity:
      - light.living_room_mood
      - light.living_room_ceiling
- id: '1649529348038'
  alias: 'Kitchen Light On: Motion'
  description: Turn on a light, based on motion detection, and low light level.
  use_blueprint:
    path: swartninja/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.kitchen_motion
      target_entity: script.kitchen_lights_on_main_or_secondary
      illuminance_sensor: sensor.kitchen_multisensor_luminance
      illuminance_cutoff: 30
      blocker_entity: input_boolean.house_mode_away
      no_motion_wait: 3
      target_off_entity:
      - light.kitchen_ceiling
      - light.kitchen_side
      turn_off_blocker_entity: binary_sensor.kitchen_motion_turn_off_blocker
- id: '1649530119015'
  alias: Kitchen Cupboard LED's
  description: 'Turn on and off kitchen cupboard LED''s '
  trigger:
  - platform: state
    entity_id: sun.sun
  - platform: state
    entity_id: light.kitchen_ceiling
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sun.sun
        state: below_horizon
      - condition: state
        entity_id: light.kitchen_ceiling
        state: 'off'
      sequence:
      - service: light.turn_on
        data:
          transition: 10
          brightness_pct: 50
        target:
          entity_id: light.kitchen_cupboard
    default:
    - service: light.turn_off
      data:
        transition: 10
      target:
        entity_id: light.kitchen_cupboard
  mode: single
- id: '1649647741261'
  alias: Office Light Off
  description: ''
  use_blueprint:
    path: swartninja/auto_light_off_illuminance.yaml
    input:
      illuminance_sensor: sensor.office_zw100_multisensor_luminance
      illuminance_cutoff: 80
      target_off_entities:
      - light.office_ceiling
      - light.office_shelf
      automation_entity: automation.office_light_on_motion
      blocker_entity: input_boolean.house_mode_away
- id: '1649703754954'
  alias: 'Hall Light On: Front Door Open'
  description: Turn on hall light if it is dark and the front door opens
  trigger:
  - platform: state
    entity_id: binary_sensor.hall_multisensor_door
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ (states(''sensor.hall_multisensor_luminance'') | int(0) <
      10 ) and is_state(''light.hall_zw111_nano_dimmer'', ''off'') }}'
  action:
  - service: light.turn_on
    data:
      brightness_pct: 100
    target:
      entity_id: light.hall_zw111_nano_dimmer
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - wait_template: '{{ is_state(''binary_sensor.hall_motion'', ''off'') }}'
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.hall_zw111_nano_dimmer
  mode: single
- id: '1649738077769'
  alias: 'Front Door Light On: Motion'
  description: ''
  use_blueprint:
    path: swartninja/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.fdc_motion
      target_entity: light.front_door_ceiling
      blocker_entity: binary_sensor.front_door_light_on_motion_automation_blocking_entity
      no_motion_wait: 2
- id: '1649811322196'
  alias: Update notifications
  description: ''
  use_blueprint:
    path: swartninja/update_notifications.yaml
    input:
      reminder_hours: '12'
      update_entities:
      - update.home_assistant_supervisor_update
      - update.home_assistant_core_update
      - update.atomic_calendar_revive_update
      - update.alexa_media_player_update
      - update.auto_entities_update
      - update.bar_card_update
      - update.browser_mod_update
      - update.button_card_update
      - update.card_mod_update
      - update.card_tools_update
      - update.fold_entity_row_update
      - update.glances_update
      - update.chrony_update
      - update.cover_control_button_row_update
      - update.home_assistant_google_drive_backup_update
      - update.ics_update
      - update.home_assistant_operating_system_update
      - update.influxdb_update
      - update.layout_card_update
      - update.living_room_curtains_firmware
      - update.hacs_update
      - update.ftp_update
      - update.mariadb_update
      - update.mini_graph_card_update
      - update.monitor_docker_update
      - update.mini_media_player_update
      - update.node_red_companion_update
      - update.samba_share_update
      - update.mosquitto_broker_update
      - update.node_red_update
      - update.simple_thermostat_update
      - update.esphome_update
      - update.state_switch_update
      - update.echonetlite_platform_update
      - update.studio_code_server_update
      - update.sun_card_update
      - update.swart_ninja_dark_theme_update
      - update.swartninjanas_dsm_update
      - update.dining_room_sml_window_firmware
      - update.deepstack_object_custom_integration_update
      - update.dining_room_corner_window_firmware
      - update.weather_card_update
      - update.z_wave_js_update
      - update.vertical_stack_in_card_update
      - update.uptime_card_update
      - update.terminal_ssh_update
      - update.template_entity_row_update
      - update.multiple_entity_row_update
      - update.pi_hole_core_update_available
      - update.pi_hole_fallback_core_update_available
      - update.pi_hole_fallback_ftl_update_available
      - update.pi_hole_fallback_web_update_available
      - update.pi_hole_ftl_update_available
      - update.pi_hole_web_update_available
      - update.16_port_switch
      - update.8_port_switch
      - update.ap_hall
      - update.ap_man_cave
      - update.hass_agent_update
      - update.mc_tv_wled_firmware
      - update.multisensor_6_firmware
      - update.multisensor_6_firmware_2
      - update.usg
      - update.zw111_nano_dimmer_firmware
      - update.zw111_nano_dimmer_firmware_2
      mobile_app_device: 53b65c3460f56fbb2eb507ff241c47e4
      send_to_ha: true
      run_config_check: true
- id: '1649837563554'
  alias: 'Phone Charger On: Battery Low'
  description: ''
  use_blueprint:
    path: swartninja/phone_charger.yaml
    input:
      switch: switch.d1mini_4_channel_relay_03
      phone_battery: sensor.dick_iphone_battery_level
      person_home: person.dick
      discharged_percent: 80
- id: '1649841335537'
  alias: Man Cave Light Off
  description: ''
  use_blueprint:
    path: swartninja/auto_light_off.yaml
    input:
      trigger_entity: binary_sensor.man_cave_light_off_automation_trigger_entity
      automation_entity: automation.man_cave_light_on_motion
      blocker_entity: input_boolean.house_mode_away
      target_off_entities:
      - light.man_cave_ceiling
      - light.man_cave_kitchen_2gang_switch_one
      - light.man_cave_kitchen_3gang_switch_two
- id: '1649873592073'
  alias: Man Cave Bathroom Light Off
  description: Turn off the light after 15min if it is day or 1hour if it is night
  trigger:
  - platform: state
    entity_id: light.man_cave_bathroom_ceiling
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: sun
        after: sunrise
        before: sunset
      sequence:
      - delay:
          hours: 0
          minutes: 45
          seconds: 0
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.man_cave_bathroom_ceiling
    default:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.man_cave_bathroom_ceiling
  mode: single
- id: '1650267675380'
  alias: 'Man Cave Kitchen Light On: Motion'
  description: ''
  use_blueprint:
    path: swartninja/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.man_cave_kitchen_zw100_multisensor_motion
      target_entity: light.man_cave_kitchen_2gang_switch_one
      illuminance_sensor: sensor.man_cave_kitchen_zw100_multisensor_luminance
      illuminance_cutoff: 20
      no_motion_wait: 10
      blocker_entity: input_boolean.house_mode_away
      target_off_entity:
      - light.man_cave_kitchen_2gang_switch_one
      - light.man_cave_kitchen_3gang_switch_two
- id: '1650269467211'
  alias: 'Ender 3: Auto Off'
  description: Turn off the 3D Printer after 10 minutes when printing is done.
  trigger:
  - platform: state
    entity_id: binary_sensor.octoprint_printing
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: state
    entity_id: binary_sensor.ender_3_octoprint
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition: []
  action:
  - service: script.shutdown_ender_3
    data: {}
  mode: single
- id: '1650322245522'
  alias: 'Man Cave Kitchen Light Two: Auto Off'
  description: Turn Off kitchen light two if light one has been on for 10min
  trigger:
  - platform: state
    entity_id: light.man_cave_kitchen_2gang_switch_one
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: state
    entity_id: light.man_cave_kitchen_3gang_switch_two
    to: 'on'
    for:
      hours: 1
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: light.man_cave_kitchen_3gang_switch_two
    state: 'on'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.man_cave_kitchen_3gang_switch_two
  mode: single
- id: '1650329838216'
  alias: Office Door
  description: Lock Office Door When Everyone Leaves and unlock when home
  trigger:
  - platform: state
    entity_id: input_boolean.house_mode_away
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.house_mode_away
        state: 'on'
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.office_door_system_cover
      - wait_for_trigger:
        - platform: state
          entity_id: cover.office_door_system_cover
          to: closed
          for:
            hours: 0
            minutes: 0
            seconds: 5
        timeout: '30'
      - service: lock.lock
        data: {}
        target:
          entity_id: lock.office_door_system_lock
    default:
    - service: lock.unlock
      data: {}
      target:
        entity_id: lock.office_door_system_lock
    - wait_for_trigger:
      - platform: state
        entity_id: lock.office_door_system_lock
        to: unlocked
        for:
          hours: 0
          minutes: 0
          seconds: 5
      timeout: '30'
      continue_on_timeout: false
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.office_door_system_cover
  mode: single
- id: '1651262763041'
  alias: Living room - TV
  description: Turn on and off motion lights automation based on TV
  trigger:
  - platform: state
    entity_id: media_player.living_room_television
  condition:
  - condition: state
    entity_id: input_boolean.house_mode_away
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.living_room_television
        state: 'on'
      sequence:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.living_room_light_on_motion
    default:
    - service: automation.turn_on
      data: {}
      target:
        entity_id: automation.living_room_light_on_motion
  mode: single
- id: '1651516698196'
  alias: 'Front Door Light On: Presence'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.presence_location_dick
    to: Home
    for:
      hours: 0
      minutes: 0
      seconds: 10
  - platform: state
    entity_id: sensor.presence_location_tamara
    to: Home
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition:
  - condition: state
    entity_id: binary_sensor.dark_outside
    state: 'on'
  - condition: state
    entity_id: light.front_door_ceiling
    state: 'off'
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.front_door_ceiling
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.hall_multisensor_door
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 30
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.front_door_ceiling
  mode: single
- id: '1664181003275'
  alias: 'Dining Room: Light On Motion'
  description: ''
  use_blueprint:
    path: swartninja/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.dining_room_motion
      target_entity: light.dining_room_sml_window
      illuminance_sensor: sensor.dining_room_luminance
      illuminance_cutoff: 30
      blocker_entity: input_boolean.house_mode_away
- id: '1670082290508'
  alias: Holiday Lighting
  description: Replay Historical Lighting
  use_blueprint:
    path: swartninja/holiday_lighting.yaml
    input:
      vacation_mode_toggle: input_boolean.house_mode_holiday
      on_blocker_entity: binary_sensor.holiday_lighting_turn_on_blocking_entity
      history_sensor_1: sensor.holiday_bathroom_zw111_nano_dimmer
      light_target_1: light.bathroom_zw111_nano_dimmer
      history_sensor_2: sensor.holiday_office_ceiling
      light_target_2: light.office_ceiling
      history_sensor_3: sensor.holiday_living_room_ceiling
      light_target_3: light.living_room_ceiling
      history_sensor_4: sensor.holiday_man_cave_ceiling
      light_target_4: light.man_cave_ceiling
      history_sensor_5: sensor.holiday_kitchen_ceiling
      light_target_5: light.kitchen_ceiling
      history_sensor_6: sensor.holiday_hall_zw111_nano_dimmer
      light_target_6: light.hall_zw111_nano_dimmer
      history_sensor_7: sensor.holiday_bedroom_master_2gang_switch_two
      light_target_7: light.bedroom_master_2gang_switch_two
      history_sensor_8: sensor.holiday_bedroom_master_3gang_switch_one
      light_target_8: light.bedroom_master_3gang_switch_one
      history_sensor_9: sensor.holiday_bedroom_nico_2gang_switch_ceiling
      light_target_9: light.bedroom_nico_2gang_switch_ceiling
      history_sensor_10: sensor.holiday_bedroom_max_2gang_switch_ceiling
      light_target_10: light.bedroom_max_2gang_switch_ceiling
      history_sensor_11: sensor.holiday_kitchen_side
      light_target_11: light.kitchen_side
- id: '1670229400048'
  alias: Turn All Lights Off
  description: Turn all lights off when it's not dark, and away or on holiday
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.dark_outside
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    alias: When Dark Outside Change to Off for 10 minutes
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.house_mode_away
      state: 'on'
    - condition: state
      entity_id: input_boolean.house_mode_holiday
      state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: '{% set all_lights = states|selectattr(''domain'',''eq'',''light'')|rejectattr(''entity_id'',''in'',[''light.alarm_lights_group'',''light.fish_tank_main_light''])
        %} {{ all_lights|map(attribute=''entity_id'')|list }}'
  mode: single
- id: '1670253843467'
  alias: 'House Mode: Set'
  description: Set house away mode to on if no one is home for 3 min and turn holiday
    mode on if no one is still home after 8 hours. Turn off house modes when someone
    gets home.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.presence_anyone_home
    to: 'off'
    for:
      hours: 0
      minutes: 3
      seconds: 0
    id: Away for 3 minutes
  - platform: state
    entity_id:
    - binary_sensor.presence_anyone_home
    to: 'off'
    for:
      hours: 8
      minutes: 0
      seconds: 0
    id: Away for 8 hours
  - platform: state
    entity_id:
    - binary_sensor.presence_anyone_home
    to: 'on'
    id: Returned home
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Away for 3 minutes
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.house_mode_away
    - conditions:
      - condition: trigger
        id: Away for 8 hours
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.house_mode_holiday
    - conditions:
      - condition: trigger
        id: Returned home
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.house_mode_away
          - input_boolean.house_mode_holiday
  mode: single
- id: '1670260292755'
  alias: 'House Mode: Away'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.house_mode_away
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.house_mode_away
        state: 'on'
      sequence:
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.d1mini_4_channel_relay_01
            - switch.d1mini_4_channel_relay_02
          alias: Turn Off electric blankets
        - service: light.turn_off
          data:
            entity_id: '{% set all_lights = states|selectattr(''domain'',''eq'',''light'')|rejectattr(''entity_id'',''in'',[''light.fish_tank_main_light''])
              %} {{ all_lights|map(attribute=''entity_id'')|list }}'
          alias: Turn Off All Lights
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.blue_iris
          alias: Turn on Blue Iris - Away
        - if:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.man_cave_heat_pump
              state: 'on'
            - condition: state
              entity_id: switch.living_room_heat_pump
              state: 'on'
          then:
          - service: notify.mobile_app_dick_iphone
            data:
              message: Everyone left home and the heat pump is on.
              data:
                actions:
                - action: HEAT_PUMP_OFF
                  title: Turn off
            alias: Notify Dick
          alias: Send Notification if any heat pump is on
        - if:
          - condition: state
            entity_id: input_boolean.house_mode_guest
            state: 'on'
          then:
          - service: notify.mobile_app_dick_iphone
            data:
              message: Everyone left home and the guest mode is on.
              data:
                actions:
                - action: GUEST_MODE_OFF
                  title: Turn off
            alias: Notify Dick
          alias: Send Notification if guest mode is on
        - if:
          - condition: state
            entity_id: input_boolean.house_mode_guest
            state: 'on'
          then:
          - service: notify.mobile_app_parents
            data:
              message: Everyone left home, and alarm was not automatically enabled,
                because 'Guest Mode' is on.
              title: Alarm Not Enabled
              data:
                actions:
                - action": ALARM_ARM_AWAY
                  title": Arm Away
                  activationMode": background
                  authenticationRequired": false
                  destructive": false
                - action": ALARM_ARM_HOME
                  title": Arm Home
                  activationMode": background
                  authenticationRequired": false
                  destructive": false
          else:
          - service: alarm_control_panel.alarm_arm_away
            data:
              code: '1981'
            target:
              entity_id: alarm_control_panel.home_alarm
    - conditions:
      - condition: state
        entity_id: input_boolean.house_mode_away
        state: 'off'
      sequence:
      - parallel:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.blue_iris
          alias: Turn off Blue Iris - Away
        - service: alarm_control_panel.alarm_disarm
          data:
            code: '1981'
          target:
            entity_id: alarm_control_panel.home_alarm
  mode: single
- id: '1676697224603'
  alias: 'Man Cave - Night light: ON'
  description: Kids sleep in man cave, turn mood light on if TV goes off.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.panasonic_tv
    from: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.dark_outside
      state: 'on'
    - condition: state
      entity_id: input_boolean.house_mode_people_sleeping_in_man_cave
      state: 'on'
  action:
  - service: light.turn_on
    data:
      color_temp: 320
      brightness: 80
    target:
      entity_id: light.hue_light_01
  mode: single
- id: '1676697444527'
  alias: 'Man Cave - Night light: OFF'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.dark_outside
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.hue_light_01
  mode: single
- id: '1678318027427'
  alias: Living room curtains
  description: Open and Close Living room curtains.
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30
    alias: 30 min before sunset
    id: closeIfCold
  - platform: sun
    event: sunset
    offset: 0
    id: closeIfCold
  - platform: state
    entity_id:
    - sun.sun
    to: below_horizon
    id: sunBelowHorizon
  - platform: sun
    event: sunrise
    offset: 00:10
    alias: 10 min after sunrise
    id: openCurtains
  - platform: sun
    event: sunrise
    offset: 00:15
    alias: 15 min after sunrise
    id: openCurtains
  - platform: sun
    event: sunrise
    offset: 0
    id: openCurtains
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: closeIfCold
        - condition: trigger
          id: sunBelowHorizon
      - condition: state
        entity_id: cover.living_room_sliding_door_curtain
        state: open
      alias: Test If Triggered by Close
    - condition: and
      conditions:
      - condition: trigger
        id: openCurtains
      - condition: state
        entity_id: cover.living_room_sliding_door_curtain
        state: closed
      alias: Test If Triggered by Open
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: trigger
            id: closeIfCold
          - condition: state
            entity_id: binary_sensor.is_cold
            state: 'on'
        - condition: trigger
          id: sunBelowHorizon
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id:
          - cover.living_room_sliding_door_curtain
    - conditions:
      - condition: trigger
        id: openCurtains
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id:
          - cover.living_room_sliding_door_curtain
  mode: single
- id: '1678318225629'
  alias: Dining room curtains
  description: Open and Close Dining room curtains.
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30
    alias: 30 min before sunset
    id: closeIfCold
  - platform: sun
    event: sunset
    offset: 0
    id: closeIfCold
  - platform: state
    entity_id:
    - sun.sun
    to: below_horizon
    id: sunBelowHorizon
  - platform: sun
    event: sunrise
    offset: 00:10
    alias: 10 min after sunrise
    id: openCurtains
  - platform: sun
    event: sunrise
    offset: 00:15
    alias: 15 min after sunrise
    id: openCurtains
  - platform: sun
    event: sunrise
    offset: 0
    id: openCurtains
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: closeIfCold
        - condition: trigger
          id: sunBelowHorizon
      - condition: state
        entity_id: cover.dining_room_curtains
        state: open
      alias: Test If Triggered by Close
    - condition: and
      conditions:
      - condition: trigger
        id: openCurtains
      - condition: state
        entity_id: cover.dining_room_curtains
        state: closed
      alias: Test If Triggered by Open
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: trigger
            id: closeIfCold
          - condition: state
            entity_id: binary_sensor.is_cold
            state: 'on'
        - condition: trigger
          id: sunBelowHorizon
      sequence:
      - if:
        - condition: state
          entity_id: cover.dining_room_corner_curtain
          state: open
        then:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.dining_room_corner_curtain
      - if:
        - condition: state
          entity_id: cover.dining_room_small_curtain
          state: open
        then:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.dining_room_small_curtain
    - conditions:
      - condition: trigger
        id: openCurtains
      sequence:
      - if:
        - condition: state
          entity_id: cover.dining_room_corner_curtain
          state: closed
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.dining_room_corner_curtain
      - if:
        - condition: state
          entity_id: cover.dining_room_small_curtain
          state: closed
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.dining_room_small_curtain
  mode: single
- id: '1679264315394'
  alias: Bedroom Nico Blinds
  description: Open and Close Nico's bedroom blinds.
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30
    alias: 30 min before sunset
    id: closeIfCold
  - platform: sun
    event: sunset
    offset: 0
    id: closeIfCold
  - platform: state
    entity_id:
    - sun.sun
    to: below_horizon
    id: sunBelowHorizon
  - platform: time
    at: input_datetime.bedroom_nico_blinds_time_open
    id: openCurtains
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: trigger
            id: closeIfCold
          - condition: state
            entity_id: binary_sensor.is_cold
            state: 'on'
        - condition: trigger
          id: sunBelowHorizon
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id:
          - cover.bedroom_nico_blinds
      - delay:
          hours: 0
          minutes: 0
          seconds: '{{ range(1, 120)|random|int }}'
          milliseconds: 0
        alias: Delay Random 1 -120 seconds
      - service: cover.close_cover
        data: {}
        target:
          entity_id:
          - cover.bedroom_nico_blinds
    - conditions:
      - condition: trigger
        id: openCurtains
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.workday_today
          state: 'on'
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_nico_blinds
        - delay:
            hours: 0
            minutes: 0
            seconds: '{{ range(1, 120)|random|int }}'
            milliseconds: 0
          alias: Delay Random 1 -120 seconds
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_nico_blinds
        else:
        - delay:
            hours: 2
            minutes: 0
            seconds: 0
            milliseconds: 0
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_nico_blinds
        - delay:
            hours: 0
            minutes: 0
            seconds: '{{ range(1, 120)|random|int }}'
            milliseconds: 0
          alias: Delay Random 1 -120 seconds
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_nico_blinds
  mode: single
- id: '1679265383473'
  alias: Bedroom Max Blinds
  description: Open and Close Max's bedroom blinds.
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30
    alias: 30 min before sunset
    id: closeIfCold
  - platform: sun
    event: sunset
    offset: 0
    id: closeIfCold
  - platform: state
    entity_id:
    - sun.sun
    to: below_horizon
    id: sunBelowHorizon
  - platform: time
    at: input_datetime.bedroom_max_blinds_time_open
    id: openCurtains
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: trigger
            id: closeIfCold
          - condition: state
            entity_id: binary_sensor.is_cold
            state: 'on'
        - condition: trigger
          id: sunBelowHorizon
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id:
          - cover.bedroom_max_blinds
      - delay:
          hours: 0
          minutes: 0
          seconds: '{{ range(1, 120)|random|int }}'
          milliseconds: 0
        alias: Delay Random 1 -120 seconds
      - service: cover.close_cover
        data: {}
        target:
          entity_id:
          - cover.bedroom_max_blinds
    - conditions:
      - condition: trigger
        id: openCurtains
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.workday_today
          state: 'on'
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_max_blinds
        - delay:
            hours: 0
            minutes: 0
            seconds: '{{ range(1, 120)|random|int }}'
            milliseconds: 0
          alias: Delay Random 1 -120 seconds
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_max_blinds
        else:
        - delay:
            hours: 2
            minutes: 0
            seconds: 0
            milliseconds: 0
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_max_blinds
        - delay:
            hours: 0
            minutes: 0
            seconds: '{{ range(1, 120)|random|int }}'
            milliseconds: 0
          alias: Delay Random 1 -120 seconds
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_max_blinds
  mode: single
- id: '1679876999923'
  alias: Bedroom Master Blinds
  description: Open and Close Master bedroom blinds.
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30
    alias: 30 min before sunset
    id: closeIfCold
  - platform: sun
    event: sunset
    offset: 0
    id: closeIfCold
  - platform: state
    entity_id:
    - sun.sun
    to: below_horizon
    id: sunBelowHorizon
  - platform: time
    at: input_datetime.bedroom_master_blinds_time_open
    id: openCurtains
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: trigger
            id: closeIfCold
          - condition: state
            entity_id: binary_sensor.is_cold
            state: 'on'
        - condition: trigger
          id: sunBelowHorizon
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id:
          - cover.bedroom_master_blinds
      - delay:
          hours: 0
          minutes: 0
          seconds: '{{ range(1, 120)|random|int }}'
          milliseconds: 0
        alias: Delay Random 1 -120 seconds
      - service: cover.close_cover
        data: {}
        target:
          entity_id:
          - cover.bedroom_master_blinds
    - conditions:
      - condition: trigger
        id: openCurtains
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.workday_today
          state: 'on'
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_master_blinds
        - delay:
            hours: 0
            minutes: 0
            seconds: '{{ range(1, 120)|random|int }}'
            milliseconds: 0
          alias: Delay Random 1 -120 seconds
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_master_blinds
        else:
        - delay:
            hours: 2
            minutes: 0
            seconds: 0
            milliseconds: 0
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_master_blinds
        - delay:
            hours: 0
            minutes: 0
            seconds: '{{ range(1, 120)|random|int }}'
            milliseconds: 0
          alias: Delay Random 1 -120 seconds
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.bedroom_master_blinds
  mode: single
- id: '1680323702508'
  alias: Notify - Dick Location
  description: Notify when Dick arrive and Leave work.
  trigger:
  - platform: zone
    entity_id: person.dick
    zone: zone.work_dick
    event: enter
    id: arrivedAtWork
    variables:
      message: Dick arrived at work.
    enabled: false
  - platform: zone
    entity_id: person.dick
    zone: zone.work_dick
    event: leave
    id: leaveAtWork
    variables:
      message: Dick left work.
    enabled: false
  - platform: state
    entity_id:
    - person.dick
    to: Work Dick
    for:
      hours: 0
      minutes: 0
      seconds: 30
    alias: Arrive at work
    variables:
      message: Dick arrived at work.
  - platform: state
    entity_id:
    - person.dick
    from: Work Dick
    for:
      hours: 0
      minutes: 0
      seconds: 30
    alias: Leave Work
    variables:
      message: Dick left work.
  condition:
  - condition: state
    entity_id: binary_sensor.workday_today
    state: 'on'
  action:
  - parallel:
    - if:
      - condition: state
        entity_id: input_boolean.notifications_audio
        state: 'on'
      then:
      - service: notify.alexa_media
        data:
          target: media_player.everywhere
          data:
            type: announce
          message: Location Update, {{message}}
    - service: notify.telegram_dick
      data:
        title: Location Update
        message: '{{message}}'
    - service: notify.telegram_tamara
      data:
        title: Location Update
        message: '{{message}}'
  mode: single
- id: '1680474688939'
  alias: Notify - Tamara Location
  description: Notify when Tamara arrives and leave at specific locations.
  trigger:
  - platform: zone
    entity_id: person.tamara
    zone: zone.wellington_train_station
    event: enter
    variables:
      message: Tamara arrived at Wellington train station.
  - platform: zone
    entity_id: person.tamara
    zone: zone.wellington_train_station
    event: leave
    variables:
      message: Tamara left Wellington train station.
  - platform: zone
    entity_id: person.tamara
    zone: zone.tawa_train_station
    event: enter
    variables:
      message: Tamara arrived at Tawa train station.
  - platform: zone
    entity_id: person.tamara
    zone: zone.tawa_train_station
    event: leave
    variables:
      message: Tamara left Tawa train station.
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.notifications_audio
      state: 'on'
    then:
    - service: notify.alexa_media
      data:
        target: media_player.everywhere
        data:
          type: announce
        message: '{{message}}'
  - service: notify.telegram_dick
    data:
      title: Tamara's Location Update
      message: '{{message}}'
  mode: single
- id: '1120092824622'
  alias: AI - On Object Detection Notify
  description: ''
  trigger:
  - platform: event
    event_type: codeproject_ai.object_detected
    event_data:
      name: person
  condition: []
  action:
  - service: telegram_bot.send_photo
    data_template:
      caption: '{{trigger.event.data.name | title}} detected - {{ trigger.event.data.confidence
        | round(2) }}% Confidence'
      file: '{{ trigger.event.data.saved_file  }}'
      target:
      - -896383178
  mode: parallel
- id: '1680480627333'
  alias: AI - On Motion Scan Image
  description: On motion process image through CodeProject.AI
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.office_motion
    variables:
      entity_id: image_processing.codeproject_ai_object_ofc
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.hall_motion
    variables:
      entity_id: image_processing.codeproject_ai_object_hlc
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.living_room_motion
    variables:
      entity_id: image_processing.codeproject_ai_object_lrc
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.man_cave_motion
    variables:
      entity_id: image_processing.codeproject_ai_object_mcc
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.dining_room_motion
    variables:
      entity_id: image_processing.codeproject_ai_object_drc
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.deck_motion
    variables:
      entity_id: image_processing.codeproject_ai_object_dec
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.front_door_motion
    variables:
      entity_id: image_processing.codeproject_ai_object_fdc
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.back_door_motion
    variables:
      entity_id: image_processing.codeproject_ai_object_byc
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.presence_anyone_home
    state: 'off'
    enabled: true
  action:
  - service: image_processing.scan
    data: {}
    target:
      entity_id: '{{entity_id}}'
  mode: parallel
- id: '1680498203737'
  alias: Doorbell
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.doorbell
    to: 'on'
  condition: []
  action:
  - parallel:
    - service: script.alexa_doorbell
      data: {}
    - service: image_processing.scan
      data: {}
      target:
        entity_id: image_processing.codeproject_ai_object_fdc
  mode: single
- id: '1680501181787'
  alias: 'Living Room: Fix Mood Light'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.living_room_mood
    for:
      hours: 0
      minutes: 0
      seconds: 30
    to: unavailable
  - platform: state
    entity_id:
    - light.living_room_mood
    for:
      hours: 0
      minutes: 0
      seconds: 30
    to: unknown
  condition:
  - condition: template
    value_template: '{{ not is_state("light.living_room_2gang_switch_two", "on") }}'
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.living_room_2gang_switch_two
  mode: single
